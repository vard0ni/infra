---
- name: Install containerd in Ubuntu
  when: ansible_facts['os_family'] == "Debian"
  block:
    - name: Docker repository for Debian [Key]
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present
        keyring: /etc/apt/trusted.gpg.d/docker.gpg

    - name: Docker repository for Ubuntu
      ansible.builtin.apt_repository:
        repo: >
          deb [signed-by=/etc/apt/trusted.gpg.d/docker.gpg]
          https://download.docker.com/linux/{{ ansible_distribution | lower }}
          {{ ansible_distribution_release }} stable
        state: present
        filename: docker-ce-stable

    - name: Install containerd
      ansible.builtin.apt:
        name:
          - containerd
        state: present

- name: Enable dockerhub mirror on containerd [mkdir certs.d]
  ansible.builtin.file:
    path: /etc/containerd/certs.d
    state: directory
    mode: u=rw,g=r,o=r

- name: Enable dockerhub mirror on containerd [mkdir docker.io]
  when: dockerhubMirror is true
  ansible.builtin.file:
    path: /etc/containerd/certs.d/docker.io
    state: directory
    mode: u=rw,g=r,o=r

- name: Enable dockerhub mirror on containerd [file hosts.toml]
  when: dockerhubMirror is true
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/containerd/certs.d/docker.io/hosts.toml
    owner: root
    mode: u=rw,g=r,o=r

- name: Create containerd config.toml
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
  register: config_toml_output
  changed_when: config_toml_output.rc != 0

- name: Add cgroup v2 [config.toml]
  ansible.builtin.shell:
    cmd: |
      sed -i 's|SystemdCgroup = false|SystemdCgroup = true|' /etc/containerd/config.toml
  register: cgroup_toml_output
  changed_when: cgroup_toml_output.rc != 0

- name: Add conf dir /etc/containerd/certs.d [config.toml]
  ansible.builtin.shell:
    cmd: |
      sed -i 's|config_path = ""|config_path = "/etc/containerd/certs.d"|' /etc/containerd/config.toml
  register: conf_toml_output
  changed_when: conf_toml_output.rc != 0

- name: Add change Sandbox Image [config.toml]
  when: sandbox_image is defined
  ansible.builtin.shell:
    cmd: |
      sed -i 's|sandbox_image = ".*"|sandbox_image = "{{ sandbox_image }}"|' /etc/containerd/config.toml
  register: config_toml_output
  changed_when: config_toml_output.rc != 0

- name: Enable and start Containerd service
  ansible.builtin.service:
    name: containerd
    state: restarted
    enabled: true
