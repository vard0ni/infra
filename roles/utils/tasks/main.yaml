---
- name: Create utils manifests directory
  ansible.builtin.file:
    path: /etc/kubernetes/utils
    state: directory
    mode: '0700'

### Priority classes
- name: Set Priority Classes
  when: priorityClassesEnable
  block:

    - name: Copy priority classes manifest
      ansible.builtin.template:
        src: priorityclass.j2
        dest: /etc/kubernetes/utils/priorityclass.yaml
        mode: '0600'
      register: priority_class

    - name: Apply priority classes manifest
      ansible.builtin.command: kubectl apply -f /etc/kubernetes/utils/priorityclass.yaml
      when: priority_class.changed
      register: kubectl_apply_pc
      changed_when: kubectl_apply_pc.rc != 0

### Metrics server
# Этот манифест Kubernetes настраивает Metrics Server , который собирает метрики (например, использование CPU и памяти) с узлов (nodes) и подов (pods) в кластере
- name: Copy metrics server manifest
  ansible.builtin.template:
    src: metrics-server.j2
    dest: /etc/kubernetes/utils/metrics-server.yaml
    mode: '0600'
  when: metricsServerEnable
  register: metrics_server

- name: Apply metrics server manifest
  ansible.builtin.command: kubectl apply -f /etc/kubernetes/utils/metrics-server.yaml
  when: metrics_server.changed
  register: kubectl_apply_mserver
  changed_when: kubectl_apply_mserver.rc != 0

### Nfs provisioner
- name: Nfs provisioner
  ansible.builtin.template:
    src: nfs.j2
    dest: /etc/kubernetes/utils/nfs-provisioner.yaml
    mode: '0600'
  when: nfsEnable
  register: nfs

- name: Apply nfs provisioner manifest
  ansible.builtin.command: kubectl apply -f /etc/kubernetes/utils/nfs-provisioner.yaml
  when: nfs.changed
  register: kubectl_apply_nfs
  changed_when: kubectl_apply_nfs.rc != 0

### MetalLB
- name: MetalLB
  when: metallbEnable
  block:
    - name: Add a metallb repository
      kubernetes.core.helm_repository:
        name: metallb
        repo_url: https://metallb.github.io/metallb

    - name: Install metallb helm chart
      kubernetes.core.helm:
        name: metallb
        chart_ref: metallb/metallb
        chart_version: "{{ metallbChartVersion }}"
        release_namespace: metallb
        create_namespace: true
        values:
          controller:
            image:
              pullPolicy: IfNotPresent
          speaker:
            image:
              pullPolicy: IfNotPresent

    - name: Wait for metallb start. Max wait 10min
      ansible.builtin.command:
        cmd: >
          kubectl wait -n metallb --for=condition=Ready pods
          --selector "app.kubernetes.io/instance=metallb"
          --timeout 600s
      register: kubectl_wait_metallb
      changed_when: kubectl_wait_metallb.rc != 0

    - name: Copy metallb pool manifest
      ansible.builtin.template:
        src: mlb.j2
        dest: /etc/kubernetes/utils/mlb.yaml
        mode: '0600'
      register: mlb_pool

    - name: Apply metallb pool manifest
      ansible.builtin.command: kubectl -n metallb apply -f /etc/kubernetes/utils/mlb.yaml
      when: mlb_pool.changed
      register: kubectl_apply_mlb
      changed_when: kubectl_apply_mlb.rc != 0

### Cert-manager
- name: Install cert-manager
  when: certManagerEnable
  block:
    - name: Add a cert-manager repository
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io

    - name: Install cert-manager chart
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        chart_version: "{{ certManagerVersion }}"
        release_namespace: cert-manager
        create_namespace: true
        values:
          crds:
            enabled: true
            keep: false

    - name: Add Issuer manifests
      ansible.builtin.copy:
        src: certs.yaml
        dest: /etc/kubernetes/utils/certs.yaml
        mode: '0600'
      register: issuer

    - name: Apply Issuer manifests
      ansible.builtin.command: kubectl apply -f /etc/kubernetes/utils/certs.yaml
      when: issuer.changed
      retries: 10
      delay: 15
      register: kubectl_apply_issuer
      until: kubectl_apply_issuer.rc == 0
      changed_when: kubectl_apply_issuer.rc != 0

### Ingress controller
- name: Ingress controller
  when: ingressControllerEnable
  block:
    - name: Add an ingress-nginx repository
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: https://kubernetes.github.io/ingress-nginx

    - name: Copy values file
      ansible.builtin.template:
        src: ingress-controller-values.j2
        dest: /etc/kubernetes/utils/ingress-controller-values.yaml
        mode: '0600'
      register: ingress_controller_values

    - name: Install ingress-nginx helm chart 
      when: ingress_controller_values.changed
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: "{{ ingressControllerChartVersion }}"
        release_namespace: ingress-nginx
        create_namespace: true
        values_files:
          - /etc/kubernetes/utils/ingress-controller-values.yaml

## ArgoCD
- name: ArgoCD
  when: argoCDEnable
  block:
    - name: Add an ArgoCD repository
      kubernetes.core.helm_repository:
        name: argocd
        repo_url: https://argoproj.github.io/argo-helm

    - name: Copy ArgoCD values file
      ansible.builtin.template:
        src: argo-values.j2
        dest: /etc/kubernetes/utils/argo-values.yaml
        mode: '0600'
      register: argo_values

    - name: Install argo helm chart
      when: argo_values.changed
      kubernetes.core.helm:
        name: argocd
        chart_ref: argocd/argo-cd
        chart_version: "{{ argoCDChartVersion }}"
        release_namespace: argocd
        create_namespace: true
        values_files:
          - /etc/kubernetes/utils/argo-values.yaml
