ansible_python_interpreter: /usr/bin/python3

imageRepository: registry.k8s.io

# Enable dockerhub mirror
dockerhubMirror: false
dockerhubMirrorURLs: 
  - "https://mirror.gcr.io/v2"
  - "https://daocloud.io/v2"

# Версия k8s
# https://kubernetes.io/releases/
kube_version: 1.32.2

kube_domain_name: cluster.local
service_cidr: "10.233.0.0/18"
pod_network_cidr: "10.233.64.0/18"


# CRI
# crio или containerd
cri: containerd

# Путь к сокету
# containerd
cri_socket: unix:///run/containerd/containerd.sock

# Sanbox image
sandbox_image: "registry.k8s.io/pause:3.10"


# CNI плагин
cni: calico

# calico
# https://github.com/projectcalico/calico
# One of: IPIP, VXLAN, IPIPCrossSubnet, VXLANCrossSubnet, None
encapsulation: "IPIPCrossSubnet"
tigera_operator_version: v3.29.2
tigera_operator_github_url: "https://raw.githubusercontent.com/projectcalico/calico/"
calicoctl_url: "https://github.com/projectcalico/calico/releases/download/"
# enableBPF: yes

# Kubelet configuration
## Резервация ресурсов для системных демонов ОС
system_reserved: true
system_memory_reserved: 512Mi
system_cpu_reserved: 500m
## system_ephemeral_storage_reserved: 5Gi
## Default: "10Mi"
container_log_max_size: 1Mi
## Default: 5
container_log_max_files: 3

kubectl_config: /etc/kubernetes/admin.conf
kubeadmin_config: /etc/kubernetes/kubeadm.conf

# nodelocaldns
# https://github.com/kubernetes/dns
nodelocaldns_image: "registry.k8s.io/dns/k8s-dns-node-cache:1.23.1"
## Изменить IP только если он уже занят
nodelocaldns_local_ip: 169.254.25.10

# High availability
# указываем кластерный ip и порт
# ha_cluster_virtual_ip: 192.168.118.130
# ha_cluster_virtual_port: 7443

### Helm
### Установка только на c1 ноду
helmVersion: v3.17.1



####### UTILS #######                             

### Priority Classes
priorityClassesEnable: true
priorityClasses:
  - name: high-priority
    value: 2000000
    globalDefault: "false"
    description: "System components. Like a pv, controllers, docker registry etc"
  - name: medium-priority
    value: 1005000
    globalDefault: "false"
    description: "Application productive env"
  - name: low-priority
    value: 1000000
    globalDefault: "false"
    description: "CI|CD components"

### Metrics server
### https://github.com/kubernetes-sigs/metrics-server
metricsServerEnable: true
metricsServerImage: "gcr.io/k8s-staging-metrics-server/metrics-server:v0.7.2"

### Nfs provisioner
### https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner
nfsEnable: true
nfsServerContainer: "gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner@sha256:b1450f94a3610b9fb1cc9cb29ef528b7b5608db6f17a039ea9ba73f0aca0d1a2"
nfsServerHost: "192.168.118.10"
nfsServerPath: "/var/nfs-disk"

### MetalLB
### https://metallb.universe.tf/
metallbEnable: true
metallbChartVersion: "v0.14.9"
# LДиапозон кластерных IP
metallbAddresses:
- 192.168.118.140-192.168.118.145

### Cert-manager 
### https://github.com/cert-manager/cert-manager
certManagerEnable: true
certManagerVersion: "v1.17.1"

### Ingress controller
### https://github.com/kubernetes/ingress-nginx
ingressControllerEnable: true
ingressControllerChartVersion: "4.12.0"
ingressControllerClassName: "system-ingress"
ingressControllerServiceType: "LoadBalancer"
ingressControllerReplicaCount: 1

### ArgoCD
### https://github.com/argoproj/argo-cd
argoCDEnable: true
argoCDChartVersion: "7.8.7"
### debug, info, warn, error
argoCDLoglevel: "info"
argoCDControllerReplicaCount: 1
argoCDServerReplicaCount: 1
argoCDURL: "argocd.gapeev.local"
# argoCDAdminPassword: ""
### https://argo-cd.readthedocs.io/en/latest/user-guide/diff-strategies/#server-side-diff
argoCDEnableServerSideDiff: "true"
### Возможные значения: annotation, label, annotation+label 
### https://argo-cd.readthedocs.io/en/latest/user-guide/resource_tracking/#additional-tracking-methods-via-an-annotation
argoCDTrackingMethod: "annotation"
### https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#ignoring-rbac-changes-made-by-aggregateroles
argoCDIgnoreAggregateRoles: "true"
